spring.main.banner-mode=off
server.shutdown=graceful

management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.health.probes.enabled=true
management.endpoint.health.group.liveness.include=livenessState
management.endpoints.web.base-path=/internal
management.endpoints.web.exposure.include=prometheus,health
management.prometheus.metrics.export.enabled=true

no.nav.security.jwt.issuer.tokenx.discovery-url=${TOKEN_X_WELL_KNOWN_URL}
no.nav.security.jwt.issuer.tokenx.accepted-audience=${TOKEN_X_CLIENT_ID}
no.nav.security.jwt.issuer.azureator.discovery-url=${AZURE_APP_WELL_KNOWN_URL}
no.nav.security.jwt.issuer.azureator.accepted-audience=${AZURE_APP_CLIENT_ID}

no.nav.security.jwt.client.registration.amt-tiltak-tokenx.token-endpoint-url=${TOKEN_X_TOKEN_ENDPOINT}
no.nav.security.jwt.client.registration.amt-tiltak-tokenx.grant-type=urn:ietf:params:oauth:grant-type:token-exchange
no.nav.security.jwt.client.registration.amt-tiltak-tokenx.authentication.client-id=${TOKEN_X_CLIENT_ID}
no.nav.security.jwt.client.registration.amt-tiltak-tokenx.authentication.client-jwk=${TOKEN_X_PRIVATE_JWK}
no.nav.security.jwt.client.registration.amt-tiltak-tokenx.authentication.client-auth-method=private_key_jwt
no.nav.security.jwt.client.registration.amt-tiltak-tokenx.token-exchange.audience=${AMT_TILTAK_TOKENX_CLIENT_ID}

no.nav.security.jwt.client.registration.amt-arrangor-tokenx.token-endpoint-url=${TOKEN_X_TOKEN_ENDPOINT}
no.nav.security.jwt.client.registration.amt-arrangor-tokenx.grant-type=urn:ietf:params:oauth:grant-type:token-exchange
no.nav.security.jwt.client.registration.amt-arrangor-tokenx.authentication.client-id=${TOKEN_X_CLIENT_ID}
no.nav.security.jwt.client.registration.amt-arrangor-tokenx.authentication.client-jwk=${TOKEN_X_PRIVATE_JWK}
no.nav.security.jwt.client.registration.amt-arrangor-tokenx.authentication.client-auth-method=private_key_jwt
no.nav.security.jwt.client.registration.amt-arrangor-tokenx.token-exchange.audience=${AMT_ARRANGOR_TOKENX_CLIENT_ID}

no.nav.security.jwt.client.registration.amt-arrangor-aad.token-endpoint-url=${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
no.nav.security.jwt.client.registration.amt-arrangor-aad.grant-type=client_credentials
no.nav.security.jwt.client.registration.amt-arrangor-aad.scope=${AMT_ARRANGOR_AAD_CLIENT_ID}
no.nav.security.jwt.client.registration.amt-arrangor-aad.authentication.client-id=${AZURE_APP_CLIENT_ID}
no.nav.security.jwt.client.registration.amt-arrangor-aad.authentication.client-secret=${AZURE_APP_CLIENT_SECRET}
no.nav.security.jwt.client.registration.amt-arrangor-aad.authentication.client-auth-method=client_secret_basic

no.nav.security.jwt.client.registration.amt-person-aad.token-endpoint-url=${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
no.nav.security.jwt.client.registration.amt-person-aad.grant-type=client_credentials
no.nav.security.jwt.client.registration.amt-person-aad.scope=${AMT_PERSON_AAD_CLIENT_ID}
no.nav.security.jwt.client.registration.amt-person-aad.authentication.client-id=${AZURE_APP_CLIENT_ID}
no.nav.security.jwt.client.registration.amt-person-aad.authentication.client-secret=${AZURE_APP_CLIENT_SECRET}
no.nav.security.jwt.client.registration.amt-person-aad.authentication.client-auth-method=client_secret_basic

no.nav.security.jwt.client.registration.amt-deltaker-aad.token-endpoint-url=${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
no.nav.security.jwt.client.registration.amt-deltaker-aad.grant-type=client_credentials
no.nav.security.jwt.client.registration.amt-deltaker-aad.scope=${AMT_DELTAKER_AAD_CLIENT_ID}
no.nav.security.jwt.client.registration.amt-deltaker-aad.authentication.client-id=${AZURE_APP_CLIENT_ID}
no.nav.security.jwt.client.registration.amt-deltaker-aad.authentication.client-secret=${AZURE_APP_CLIENT_SECRET}
no.nav.security.jwt.client.registration.amt-deltaker-aad.authentication.client-auth-method=client_secret_basic

amt-tiltak.url=http://amt-tiltak
amt-arrangor.url=http://amt-arrangor
amt-person.url=http://amt-person-service
amt-deltaker.url=http://amt-deltaker

app.env.unleashUrl=${UNLEASH_SERVER_API_URL}/api
app.env.unleashApiToken=${UNLEASH_SERVER_API_TOKEN}

spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.hikari.maximum-pool-size=3
spring.flyway.postgresql.transactional-lock=false

kafka.auto-offset-reset=earliest